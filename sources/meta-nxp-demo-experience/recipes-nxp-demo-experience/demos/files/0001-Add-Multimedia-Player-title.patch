diff --git a/content/PlaybackRateControl.qml b/content/PlaybackRateControl.qml
index 5304499..e5b5acf 100755
--- a/content/PlaybackRateControl.qml
+++ b/content/PlaybackRateControl.qml
@@ -74,7 +74,7 @@ Item {
             id: slider
             Layout.fillWidth: true
             snapMode: Slider.SnapOnRelease
-            enabled: true
+            enabled: false
             from: 0.5
             to: 2.5
             stepSize: 0.5
diff --git a/content/PlaybackSeekControl.qml b/content/PlaybackSeekControl.qml
index ae96179..516eb42 100755
--- a/content/PlaybackSeekControl.qml
+++ b/content/PlaybackSeekControl.qml
@@ -88,7 +88,7 @@ Item {
         Slider {
             id: mediaSlider
             Layout.fillWidth: true
-            enabled: true //MediaPlayerWrapper.seekable
+            enabled: false
             to: 1.0
             value:
             {
diff --git a/Config.ini b/Config.ini
new file mode 100644
index 0000000..7873ea1
--- /dev/null
+++ b/Config.ini
@@ -0,0 +1,12 @@
+[AFEConfig]
+WWDectionDisable = 1
+WakeWordEngine = VIT
+DebugEnable = 0
+RefSignalDelay = 3211
+mic0 = 35.0, 15.15, 0.0
+mic1 = 17.5, -15.15, 0.0
+mic2 = -17.5, -15.15, 0.0
+mic3 = -35.0, 15.15, 0.0
+VoiceSpotModel = HeyNXP_en-US_1.bin
+VoiceSpotParams = HeyNXP_1_params.bin
+VITLanguage = English
diff --git a/bt-init.sh b/bt-init.sh
new file mode 100755
index 0000000..c6512bd
--- /dev/null
+++ b/bt-init.sh
@@ -0,0 +1,226 @@
+#!/bin/sh
+
+# Copyright 2022 NXP                                                                                                              
+# SPDX-License-Identifier: BSD-3-Clause
+
+# This script configures Bluetooth only one time
+
+# Bluetooth function
+Bluetooth () {
+        /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/stop.sh &
+        # Init Bluetooth
+        modprobe moal mod_para=nxp/wifi_mod_para.conf
+        sleep 3
+        modprobe btnxpuart
+        hciconfig hci0 up
+        sleep 1
+        #Set Baud Rate to 3000000
+        #hcitool -i hci0 cmd 0x3f 0x0009 0xc0 0xc6 0x2d 0x00
+        sleep 2
+        sleep 1
+        hciconfig hci0 up
+        #SSP(Simple secure pairing) : New way to create linkkey using simple secure pairing
+        hciconfig hci0 sspmode 1
+        hciconfig hci0 piscan
+        #Disable authentication
+        hciconfig hci0 noauth
+        echo "no auth"
+        sdptool add SP
+        sleep 1
+        bluetoothctl discoverable off
+        bluetoothctl pairable off
+        sleep 1
+        bluetoothctl reset-alias
+        bluetoothctl system-alias iMX-MultimediaPlayer
+        bluetoothctl discoverable on
+        sleep 1
+        bluetoothctl pairable on
+        sleep 1
+        bluetoothctl show
+        echo "Auto connect..."
+        while [ "$(ps -aux | grep Btplayer)" != "" ]
+        do
+                # Automatic connection
+                output="";
+                coproc bluetoothctl
+                ID=$!
+                echo "pid of the command launched:$ID";
+                #Time delay for the User responce, Accept Pair Code
+                for (( a=1; a<4; a++ ))
+                do
+                        read output <&${COPROC[0]}
+                        echo "$output";
+                done
+                sleep 4
+                #Yes command to accept Pair code and Authorize Service
+                for (( b=1; b<11; b++ ))
+                do
+                        echo -e 'yes\n' >&${COPROC[1]}
+                        sleep .3
+                done
+                #Exit from the Bluetoothctl
+                echo -e 'exit\n' >&${COPROC[1]}
+                kill ${ID}
+                echo "Kill:$ID";
+
+                # Check if Btplayer is running
+                if [ "$(ps -aux | grep Btplayer)" == "" ]; then
+                        bluetoothctl disconnect
+                        exit 1
+                fi
+
+                # Get MAC address
+                MAC=$(bluetoothctl info | grep Device | cut -c 8-24);
+                echo "${MAC}" > /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/mac_address.txt
+                sed -i 's/:/_/g' /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/mac_address.txt
+                echo -e "MAC address:";
+                cat /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/mac_address.txt
+                MAC=$(cat /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/mac_address.txt);
+
+                # Send the message notifying when a device has been connected
+                /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/MsgQ 1${MAC}
+
+                # Check if Bluetooth is connected
+                bt_status=$(bluetoothctl devices Connected);
+                echo -e "Bluetooth Status:${bt_status}";
+                while [ "${bt_status}" != "" ]
+                do
+                        sleep .5
+                        bt_status=$(bluetoothctl devices Connected);
+                done
+
+                # In this point a device has been disconnected #
+                echo "Device has been disconnected";
+                # Send the message notifying when a device has been disconnected
+                /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/MsgQ 0${MAC}
+       done
+
+}
+
+# Set Audio function
+Set_Audio () {
+
+        # Start pulseaudio server
+        pulseaudio --start --log-target=syslog
+        echo "Pulseaudio server successfully started";
+        # Get card number
+        alsa_sink=$(aplay -l | grep -B1 "Loopback" | grep -B1 "1" | cut -c 6-6 | sed '1d');
+        echo -e "Loopback card:${alsa_sink}";
+        # Load the pulseaudio module
+        pacmd load-module module-alsa-sink device=hw:${alsa_sink},1
+
+        # Get sink pulse audio index
+        sink_index=$(pacmd list-sinks | grep -B1 "name: <alsa_output.hw*" | sed '$d' | cut -d " " -f 5);
+        if  [[ $sink_index == "" || $sink_index == "index:" ]]
+        then
+                sink_index=$(pacmd list-sinks | grep -B1 "name: <alsa_output.hw*" | sed '$d' | cut -d " " -f 6);
+        fi
+        echo -e "Sink index:${sink_index}";
+
+        # Set default sink
+        pacmd set-default-sink ${sink_index}
+
+        # Get source pulse audio index
+        source_index=$(pacmd list-sources | grep -B1 "name: <alsa_input.platform-sound-bt*" | sed '$d' | cut -d " " -f 5);
+        if  [[ $source_index == "" || $source_index == "index:" ]]
+        then
+                source_index=$(pacmd list-sources | grep -B1 "name: <alsa_input.platform-sound-bt*" | sed '$d' | cut -d " " -f 6);
+        fi
+        echo -e "Source index:${source_index}";
+
+        # Set default source
+        pacmd set-default-source ${source_index}
+}
+
+# Check if Bluetooth was previously configured
+bt_previous=$(hciconfig | grep hci0: | cut -c 1-5);
+
+if [[ $bt_previous == "hci0:" ]]
+then
+        /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/stop.sh &
+        #Disconnect from any device
+        #bluetoothctl disconnect
+        bluetoothctl discoverable off
+        bluetoothctl pairable off
+        sleep 1
+        bluetoothctl discoverable on
+        sleep 1
+        bluetoothctl pairable on
+        sleep 1
+        bluetoothctl show
+        echo "Auto connect..."
+        while [ "$(ps -aux | grep Btplayer)" != "" ]
+        do
+                # Automatic connection
+                output="";
+                coproc bluetoothctl
+                ID=$!
+                echo "pid of the command launched:$ID";
+                #Time delay for the User responce, Accept Pair Code
+                for (( a=1; a<4; a++ ))
+                do
+                        read output <&${COPROC[0]}
+                        echo "$output";
+                done
+                sleep 4
+                #Yes command to accept Pair code and Authorize Service
+                for (( b=1; b<11; b++ ))
+                do
+                        echo -e 'yes\n' >&${COPROC[1]}
+                        sleep .3
+                done
+                #Exit from the Bluetoothctl
+                echo -e 'exit\n' >&${COPROC[1]}
+                kill ${ID}
+                echo "Kill:$ID";
+
+                # Check if Btplayer is running
+                if [ "$(ps -aux | grep Btplayer)" == "" ]; then
+                        bluetoothctl disconnect
+                        exit 1
+                fi
+                # Get MAC address
+                MAC=$(bluetoothctl info | grep Device | cut -c 8-24);
+                echo "${MAC}" > /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/mac_address.txt
+                sed -i 's/:/_/g' /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/mac_address.txt
+                echo -e "MAC address:";
+                cat /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/mac_address.txt
+                MAC=$(cat /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/mac_address.txt);
+
+                # Send the message notifying when a device has been connected
+                /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/MsgQ 1${MAC}
+
+                # Check if Bluetooth is connected
+                bt_status=$(bluetoothctl devices Connected);
+                echo -e "Bluetooth Status:${bt_status}";
+                while [ "${bt_status}" != "" ]
+                do
+                        sleep .5
+                        bt_status=$(bluetoothctl devices Connected);
+                done
+
+                # In this point a device has been disconnected #
+                echo "Device has been disconnected";
+                # Send the message notifying when a device has been disconnected
+                /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/MsgQ 0${MAC}
+        done
+else
+        # Get EVK name
+        sync
+        evk=$(uname -n);
+        echo -e "Evk:${evk}";
+        rm device.txt
+        echo evk > device.txt;
+
+        # Set Audio
+        Set_Audio
+   
+       if  [[ $evk == "imx93-11x11-lpddr4x-evk" || $evk == "imx93evk" ]]
+        then
+                # Bluetooth function
+                Bluetooth LP4
+        else
+                # Bluetooth function
+                Bluetooth mxc0
+        fi
+fi
diff --git a/Restore_AFEConfig.sh b/Restore_AFEConfig.sh
new file mode 100755
index 0000000..f5c70be
--- /dev/null
+++ b/Restore_AFEConfig.sh
@@ -0,0 +1,12 @@
+#!/bin/sh
+
+# Copyright 2022 NXP
+# SPDX-License-Identifier: BSD-3-Clause
+
+# Restore VoiceSeeker Audio Front-End
+
+# Revert asound.conf
+cp -v /etc/asound.conf_original /etc/asound.conf
+
+# Revert Config.ini file
+cp -v /unit_tests/nxp-afe/Config.ini_original /unit_tests/nxp-afe/Config.ini
diff --git a/init.sh b/init.sh
new file mode 100755
index 0000000..f6e743a
--- /dev/null
+++ b/init.sh
@@ -0,0 +1,44 @@
+#!/bin/sh
+
+# Copyright 2022 NXP
+# SPDX-License-Identifier: BSD-3-Clause
+
+
+uname -n > /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/device.txt
+evk=$(uname -n);
+
+echo -e "Evk:${evk}";
+cp -v /etc/asound.conf /etc/asound.conf_original
+
+if  [[ $evk == "imx8mp-lpddr4-evk" || $evk == "imx8mpevk" ]]
+then
+        cp -v /unit_tests/nxp-afe/asound.conf_imx8mp /etc/asound.conf
+elif [[ $evk == "imx93-11x11-lpddr4x-evk" || $evk == "imx93evk" ]]
+then
+        cp -v /unit_tests/nxp-afe/asound.conf_imx93 /etc/asound.conf
+elif  [[ $evk == "imx8mm-lpddr4-evk" || $evk == "imx8mmevk" ]]
+then
+        cp -v /unit_tests/nxp-afe/asound.conf_imx8mm /etc/asound.conf
+else
+        cp -v /unit_tests/nxp-afe/asound.conf /etc/asound.conf
+fi
+
+modprobe snd-aloop
+
+# Copy Config.ini file
+cp -v /unit_tests/nxp-afe/Config.ini /unit_tests/nxp-afe/Config.ini_original
+cp -v /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/Config.ini /unit_tests/nxp-afe
+touch /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/mute.vol
+
+/unit_tests/nxp-afe/afe libvoiceseekerlight  &
+pulseaudio --start --log-target=syslog
+
+if [[ $evk == "imx93-11x11-lpddr4x-evk" || $evk == "imx93evk" ]]
+then
+        /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/i.MX9X_A55/btp_vit -ddefault -l ENGLISH -t 100000 -i IMX9XA55 &
+else
+        /home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/i.MX8M_A53/btp_vit -ddefault -l ENGLISH -t 100000 &
+fi
+
+sleep 2
+/home/root/.nxp-demo-experience/scripts/multimedia/btplayerdemo/Btplayer
diff --git a/stop.sh b/stop.sh
new file mode 100644
index 0000000..883e02b
--- /dev/null
+++ b/stop.sh
@@ -0,0 +1,11 @@
+#/bin/sh
+
+# Check if Btplayer is running
+echo "Bt Player Stop Script"
+while [ "$(ps -a | grep Btplayer)" != "" ]
+do
+        sleep 1
+done
+
+echo "Disconnect"
+bluetoothctl disconnect
